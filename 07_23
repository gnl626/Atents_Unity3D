using System;
using System.Collections.Generic;

namespace hwi
{
	class Program
	{
    partial class EE
		{
			int a = 0;

			public EE(int a, int b)
			{

			}
		}
		partial class EE
		{
			int b = 0;

			public EE()
			{

			}
		}
		static void Main(string[] args)
		{
			List<int> a = null;
			List<int> b = new List<int>();
			try
			{
				a.Add(1);
			}
			catch
			{
				Console.WriteLine("안돼");
			}

			try
			{
				b[3] = 3;
			}
			catch(Exception e)
			{
				Console.WriteLine(e.Message);
			}
			string aa = "aa";
			System.DateTime.Parse(aa);
		}
	}
}
//
using System;
using System.Collections.Generic;

namespace hwi
{
	class Program
	{
		public class UI_Text
		{
			public string text { get; set; } = string.Empty;
		}

		public static class OKPopup
		{
			public static System.Action m_fpCloseBtn = null;
			public static System.Action m_fpOKBtn = null;
			public static UI_Text m_lbText = new UI_Text();


			public static void MessageBox(string a_strContent,
				System.Action a_fpOK, System.Action a_fpCancel)
			{
				m_lbText.text = a_strContent;
				m_fpOKBtn = a_fpOK;
				m_fpCloseBtn = a_fpCancel;
			}

			public static void OnClickOKButton()
			{
				m_fpOKBtn?.Invoke();	
				//같고있는 함수를 호출
				//?.은 null이 아니면 시행해라
			}
			public static void OnClickCloseButton()
			{
				m_fpCloseBtn?.Invoke();
			}
		}

		static void Main(string[] args)
		{
			OKPopup.MessageBox("너네들 사탕당 500원 나중에 반납해야돼",
				() => { Console.WriteLine("OK 버튼 클릭 - 송금"); },
				() => { Console.WriteLine("Cancel 버튼 클릭 - 현금"); }
			);

			OKPopup.m_fpOKBtn();
      
      List<int> li = new List<int>() { 10, 3, 45, 2, 1, 52 };

			li.Sort(
				(a, b) =>
				{
					return a.CompareTo(b);
				}
			);

			foreach (var i in li)
				Console.WriteLine(i);
        
		}
	}
}
//
using System;
using System.Collections.Generic;

namespace hwi
{
	class Program
	{
		public enum epacket
		{
			LevelUp,
		}

		public class STPacket
		{
			public STPacket(string a_strData)
			{
				strPacket = a_strData;
			}
			string strPacket;
		}

		public class Network
		{
			void LevelUp(int a_nNowLevel, Action<bool> a_fpCallback = null)
			{
				string strLevel = a_nNowLevel.ToString();

				Send(epacket.LevelUp, new STPacket(strLevel), a_fpCallback);
			}
			void Send(epacket ePacket, STPacket a_stPacket, Action<bool> a_fpCallback)
			{
				//실제 네트워크 관련 Sedn
				// WWW.~~~~

				//if(WWW.isDone) {}

				bool bSuccess = true;

				a_fpCallback?.Invoke(bSuccess);
			}
		}

		static void Main(string[] args)
		{
			
		}
	}
}
/*숙제
partial class
Nullable<T>
var
람다
try, catch
System.DateTime
System.TimeSpan
Sysyem.Diagnostics.Stopwatch

*/
using System;

namespace hwi
{
    class Program
    {
		public class UI_Text
		{
			public string text { get; set; } = string.Empty;
		}
		partial class Network
		{
			//생성자 모음
			public Network() {
				try
				{
					Console.WriteLine(m_str);
					m_levelUpMessage();
				}
				catch
				{
					Console.WriteLine("에러데스");
				}
			}
		}
		partial class Network
		{
			//함수 모음
			public static void MessageBox(string a_str, 
				System.Action a_levelUp)
			{
				m_str = a_str;
				m_levelUpMessage = a_levelUp;
			}
		}
		partial class Network
		{
			//변수(델리게이트 포함) 모음
			public static System.Action m_levelUpMessage = null;
			public static UI_Text m_lbText = new UI_Text();
			public static string m_str = null;
		}
		static void Main(string[] args)
        {
			System.Diagnostics.Stopwatch stp = new System.Diagnostics.Stopwatch();
			stp.Start();
			Network.MessageBox("네트워크데스",
				() => { Console.WriteLine("레벨업 했다데스"); }
				);
			Network net = new Network();

			DateTime date1 = new DateTime();
			Console.WriteLine(date1.DayOfYear);
			TimeSpan times = new TimeSpan();
			Console.WriteLine(times.Days);
			stp.Stop();
			Console.WriteLine(stp); 
		}
	}
}

